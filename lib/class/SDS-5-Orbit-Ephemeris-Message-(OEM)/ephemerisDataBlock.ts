// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { covarianceMatrixLine, covarianceMatrixLineT } from './covarianceMatrixLine';
import { ephemerisDataLine, ephemerisDataLineT } from './ephemerisDataLine';
import { referenceFrame } from './referenceFrame';
import { timeSystem } from './timeSystem';


export class ephemerisDataBlock {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):ephemerisDataBlock {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsephemerisDataBlock(bb:flatbuffers.ByteBuffer, obj?:ephemerisDataBlock):ephemerisDataBlock {
  return (obj || new ephemerisDataBlock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsephemerisDataBlock(bb:flatbuffers.ByteBuffer, obj?:ephemerisDataBlock):ephemerisDataBlock {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ephemerisDataBlock()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

COMMENT():string|null
COMMENT(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
COMMENT(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OBJECT_NAME():string|null
OBJECT_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
OBJECT_NAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

OBJECT_ID():string|null
OBJECT_ID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
OBJECT_ID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CENTER_NAME():string|null
CENTER_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CENTER_NAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

REF_FRAME():referenceFrame {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : referenceFrame.EME2000;
}

REF_FRAME_EPOCH():string|null
REF_FRAME_EPOCH(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
REF_FRAME_EPOCH(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TIME_SYSTEM():timeSystem {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : timeSystem.GMST;
}

START_TIME():string|null
START_TIME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
START_TIME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

USEABLE_START_TIME():string|null
USEABLE_START_TIME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
USEABLE_START_TIME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

USEABLE_STOP_TIME():string|null
USEABLE_STOP_TIME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
USEABLE_STOP_TIME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

STOP_TIME():string|null
STOP_TIME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
STOP_TIME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

INTERPOLATION():string|null
INTERPOLATION(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
INTERPOLATION(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

INTERPOLATION_DEGREE():number {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

EPHEMERIS_DATA_LINES(index: number, obj?:ephemerisDataLine):ephemerisDataLine|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new ephemerisDataLine()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

EPHEMERIS_DATA_LINESLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

COVARIANCE_MATRIX_LINES(index: number, obj?:covarianceMatrixLine):covarianceMatrixLine|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new covarianceMatrixLine()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

COVARIANCE_MATRIX_LINESLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

static startephemerisDataBlock(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addCOMMENT(builder:flatbuffers.Builder, COMMENTOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, COMMENTOffset, 0);
}

static addOBJECT_NAME(builder:flatbuffers.Builder, OBJECT_NAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, OBJECT_NAMEOffset, 0);
}

static addOBJECT_ID(builder:flatbuffers.Builder, OBJECT_IDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, OBJECT_IDOffset, 0);
}

static addCENTER_NAME(builder:flatbuffers.Builder, CENTER_NAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, CENTER_NAMEOffset, 0);
}

static addREF_FRAME(builder:flatbuffers.Builder, REF_FRAME:referenceFrame) {
  builder.addFieldInt8(4, REF_FRAME, referenceFrame.EME2000);
}

static addREF_FRAME_EPOCH(builder:flatbuffers.Builder, REF_FRAME_EPOCHOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, REF_FRAME_EPOCHOffset, 0);
}

static addTIME_SYSTEM(builder:flatbuffers.Builder, TIME_SYSTEM:timeSystem) {
  builder.addFieldInt8(6, TIME_SYSTEM, timeSystem.GMST);
}

static addSTART_TIME(builder:flatbuffers.Builder, START_TIMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, START_TIMEOffset, 0);
}

static addUSEABLE_START_TIME(builder:flatbuffers.Builder, USEABLE_START_TIMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, USEABLE_START_TIMEOffset, 0);
}

static addUSEABLE_STOP_TIME(builder:flatbuffers.Builder, USEABLE_STOP_TIMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, USEABLE_STOP_TIMEOffset, 0);
}

static addSTOP_TIME(builder:flatbuffers.Builder, STOP_TIMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, STOP_TIMEOffset, 0);
}

static addINTERPOLATION(builder:flatbuffers.Builder, INTERPOLATIONOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, INTERPOLATIONOffset, 0);
}

static addINTERPOLATION_DEGREE(builder:flatbuffers.Builder, INTERPOLATION_DEGREE:number) {
  builder.addFieldInt32(12, INTERPOLATION_DEGREE, 0);
}

static addEPHEMERIS_DATA_LINES(builder:flatbuffers.Builder, EPHEMERIS_DATA_LINESOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, EPHEMERIS_DATA_LINESOffset, 0);
}

static createEPHEMERIS_DATA_LINESVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startEPHEMERIS_DATA_LINESVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addCOVARIANCE_MATRIX_LINES(builder:flatbuffers.Builder, COVARIANCE_MATRIX_LINESOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, COVARIANCE_MATRIX_LINESOffset, 0);
}

static createCOVARIANCE_MATRIX_LINESVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCOVARIANCE_MATRIX_LINESVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static endephemerisDataBlock(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createephemerisDataBlock(builder:flatbuffers.Builder, COMMENTOffset:flatbuffers.Offset, OBJECT_NAMEOffset:flatbuffers.Offset, OBJECT_IDOffset:flatbuffers.Offset, CENTER_NAMEOffset:flatbuffers.Offset, REF_FRAME:referenceFrame, REF_FRAME_EPOCHOffset:flatbuffers.Offset, TIME_SYSTEM:timeSystem, START_TIMEOffset:flatbuffers.Offset, USEABLE_START_TIMEOffset:flatbuffers.Offset, USEABLE_STOP_TIMEOffset:flatbuffers.Offset, STOP_TIMEOffset:flatbuffers.Offset, INTERPOLATIONOffset:flatbuffers.Offset, INTERPOLATION_DEGREE:number, EPHEMERIS_DATA_LINESOffset:flatbuffers.Offset, COVARIANCE_MATRIX_LINESOffset:flatbuffers.Offset):flatbuffers.Offset {
  ephemerisDataBlock.startephemerisDataBlock(builder);
  ephemerisDataBlock.addCOMMENT(builder, COMMENTOffset);
  ephemerisDataBlock.addOBJECT_NAME(builder, OBJECT_NAMEOffset);
  ephemerisDataBlock.addOBJECT_ID(builder, OBJECT_IDOffset);
  ephemerisDataBlock.addCENTER_NAME(builder, CENTER_NAMEOffset);
  ephemerisDataBlock.addREF_FRAME(builder, REF_FRAME);
  ephemerisDataBlock.addREF_FRAME_EPOCH(builder, REF_FRAME_EPOCHOffset);
  ephemerisDataBlock.addTIME_SYSTEM(builder, TIME_SYSTEM);
  ephemerisDataBlock.addSTART_TIME(builder, START_TIMEOffset);
  ephemerisDataBlock.addUSEABLE_START_TIME(builder, USEABLE_START_TIMEOffset);
  ephemerisDataBlock.addUSEABLE_STOP_TIME(builder, USEABLE_STOP_TIMEOffset);
  ephemerisDataBlock.addSTOP_TIME(builder, STOP_TIMEOffset);
  ephemerisDataBlock.addINTERPOLATION(builder, INTERPOLATIONOffset);
  ephemerisDataBlock.addINTERPOLATION_DEGREE(builder, INTERPOLATION_DEGREE);
  ephemerisDataBlock.addEPHEMERIS_DATA_LINES(builder, EPHEMERIS_DATA_LINESOffset);
  ephemerisDataBlock.addCOVARIANCE_MATRIX_LINES(builder, COVARIANCE_MATRIX_LINESOffset);
  return ephemerisDataBlock.endephemerisDataBlock(builder);
}

unpack(): ephemerisDataBlockT {
  return new ephemerisDataBlockT(
    this.COMMENT(),
    this.OBJECT_NAME(),
    this.OBJECT_ID(),
    this.CENTER_NAME(),
    this.REF_FRAME(),
    this.REF_FRAME_EPOCH(),
    this.TIME_SYSTEM(),
    this.START_TIME(),
    this.USEABLE_START_TIME(),
    this.USEABLE_STOP_TIME(),
    this.STOP_TIME(),
    this.INTERPOLATION(),
    this.INTERPOLATION_DEGREE(),
    this.bb!.createObjList(this.EPHEMERIS_DATA_LINES.bind(this), this.EPHEMERIS_DATA_LINESLength()),
    this.bb!.createObjList(this.COVARIANCE_MATRIX_LINES.bind(this), this.COVARIANCE_MATRIX_LINESLength())
  );
}


unpackTo(_o: ephemerisDataBlockT): void {
  _o.COMMENT = this.COMMENT();
  _o.OBJECT_NAME = this.OBJECT_NAME();
  _o.OBJECT_ID = this.OBJECT_ID();
  _o.CENTER_NAME = this.CENTER_NAME();
  _o.REF_FRAME = this.REF_FRAME();
  _o.REF_FRAME_EPOCH = this.REF_FRAME_EPOCH();
  _o.TIME_SYSTEM = this.TIME_SYSTEM();
  _o.START_TIME = this.START_TIME();
  _o.USEABLE_START_TIME = this.USEABLE_START_TIME();
  _o.USEABLE_STOP_TIME = this.USEABLE_STOP_TIME();
  _o.STOP_TIME = this.STOP_TIME();
  _o.INTERPOLATION = this.INTERPOLATION();
  _o.INTERPOLATION_DEGREE = this.INTERPOLATION_DEGREE();
  _o.EPHEMERIS_DATA_LINES = this.bb!.createObjList(this.EPHEMERIS_DATA_LINES.bind(this), this.EPHEMERIS_DATA_LINESLength());
  _o.COVARIANCE_MATRIX_LINES = this.bb!.createObjList(this.COVARIANCE_MATRIX_LINES.bind(this), this.COVARIANCE_MATRIX_LINESLength());
}
}

export class ephemerisDataBlockT {
constructor(
  public COMMENT: string|Uint8Array|null = null,
  public OBJECT_NAME: string|Uint8Array|null = null,
  public OBJECT_ID: string|Uint8Array|null = null,
  public CENTER_NAME: string|Uint8Array|null = null,
  public REF_FRAME: referenceFrame = referenceFrame.EME2000,
  public REF_FRAME_EPOCH: string|Uint8Array|null = null,
  public TIME_SYSTEM: timeSystem = timeSystem.GMST,
  public START_TIME: string|Uint8Array|null = null,
  public USEABLE_START_TIME: string|Uint8Array|null = null,
  public USEABLE_STOP_TIME: string|Uint8Array|null = null,
  public STOP_TIME: string|Uint8Array|null = null,
  public INTERPOLATION: string|Uint8Array|null = null,
  public INTERPOLATION_DEGREE: number = 0,
  public EPHEMERIS_DATA_LINES: (ephemerisDataLineT)[] = [],
  public COVARIANCE_MATRIX_LINES: (covarianceMatrixLineT)[] = []
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const COMMENT = (this.COMMENT !== null ? builder.createString(this.COMMENT!) : 0);
  const OBJECT_NAME = (this.OBJECT_NAME !== null ? builder.createString(this.OBJECT_NAME!) : 0);
  const OBJECT_ID = (this.OBJECT_ID !== null ? builder.createString(this.OBJECT_ID!) : 0);
  const CENTER_NAME = (this.CENTER_NAME !== null ? builder.createString(this.CENTER_NAME!) : 0);
  const REF_FRAME_EPOCH = (this.REF_FRAME_EPOCH !== null ? builder.createString(this.REF_FRAME_EPOCH!) : 0);
  const START_TIME = (this.START_TIME !== null ? builder.createString(this.START_TIME!) : 0);
  const USEABLE_START_TIME = (this.USEABLE_START_TIME !== null ? builder.createString(this.USEABLE_START_TIME!) : 0);
  const USEABLE_STOP_TIME = (this.USEABLE_STOP_TIME !== null ? builder.createString(this.USEABLE_STOP_TIME!) : 0);
  const STOP_TIME = (this.STOP_TIME !== null ? builder.createString(this.STOP_TIME!) : 0);
  const INTERPOLATION = (this.INTERPOLATION !== null ? builder.createString(this.INTERPOLATION!) : 0);
  const EPHEMERIS_DATA_LINES = ephemerisDataBlock.createEPHEMERIS_DATA_LINESVector(builder, builder.createObjectOffsetList(this.EPHEMERIS_DATA_LINES));
  const COVARIANCE_MATRIX_LINES = ephemerisDataBlock.createCOVARIANCE_MATRIX_LINESVector(builder, builder.createObjectOffsetList(this.COVARIANCE_MATRIX_LINES));

  return ephemerisDataBlock.createephemerisDataBlock(builder,
    COMMENT,
    OBJECT_NAME,
    OBJECT_ID,
    CENTER_NAME,
    this.REF_FRAME,
    REF_FRAME_EPOCH,
    this.TIME_SYSTEM,
    START_TIME,
    USEABLE_START_TIME,
    USEABLE_STOP_TIME,
    STOP_TIME,
    INTERPOLATION,
    this.INTERPOLATION_DEGREE,
    EPHEMERIS_DATA_LINES,
    COVARIANCE_MATRIX_LINES
  );
}
}
