// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class CONTACT_POINT implements flatbuffers.IUnpackableObject<CONTACT_POINTT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CONTACT_POINT {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCONTACT_POINT(bb:flatbuffers.ByteBuffer, obj?:CONTACT_POINT):CONTACT_POINT {
  return (obj || new CONTACT_POINT()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCONTACT_POINT(bb:flatbuffers.ByteBuffer, obj?:CONTACT_POINT):CONTACT_POINT {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CONTACT_POINT()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GUID():string|null
GUID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GUID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CONTACT_TYPE():string|null
CONTACT_TYPE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CONTACT_TYPE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EMAIL():string|null
EMAIL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
EMAIL(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TELEPHONE():string|null
TELEPHONE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TELEPHONE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CONTACT_OPTION():string|null
CONTACT_OPTION(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
CONTACT_OPTION(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AREA_SERVED():string|null
AREA_SERVED(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
AREA_SERVED(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

AVAILABLE_LANGUAGE():string|null
AVAILABLE_LANGUAGE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
AVAILABLE_LANGUAGE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startCONTACT_POINT(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addGuid(builder:flatbuffers.Builder, GUIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, GUIDOffset, 0);
}

static addContactType(builder:flatbuffers.Builder, CONTACT_TYPEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, CONTACT_TYPEOffset, 0);
}

static addEmail(builder:flatbuffers.Builder, EMAILOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, EMAILOffset, 0);
}

static addTelephone(builder:flatbuffers.Builder, TELEPHONEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, TELEPHONEOffset, 0);
}

static addContactOption(builder:flatbuffers.Builder, CONTACT_OPTIONOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, CONTACT_OPTIONOffset, 0);
}

static addAreaServed(builder:flatbuffers.Builder, AREA_SERVEDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, AREA_SERVEDOffset, 0);
}

static addAvailableLanguage(builder:flatbuffers.Builder, AVAILABLE_LANGUAGEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, AVAILABLE_LANGUAGEOffset, 0);
}

static endCONTACT_POINT(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCONTACT_POINT(builder:flatbuffers.Builder, GUIDOffset:flatbuffers.Offset, CONTACT_TYPEOffset:flatbuffers.Offset, EMAILOffset:flatbuffers.Offset, TELEPHONEOffset:flatbuffers.Offset, CONTACT_OPTIONOffset:flatbuffers.Offset, AREA_SERVEDOffset:flatbuffers.Offset, AVAILABLE_LANGUAGEOffset:flatbuffers.Offset):flatbuffers.Offset {
  CONTACT_POINT.startCONTACT_POINT(builder);
  CONTACT_POINT.addGuid(builder, GUIDOffset);
  CONTACT_POINT.addContactType(builder, CONTACT_TYPEOffset);
  CONTACT_POINT.addEmail(builder, EMAILOffset);
  CONTACT_POINT.addTelephone(builder, TELEPHONEOffset);
  CONTACT_POINT.addContactOption(builder, CONTACT_OPTIONOffset);
  CONTACT_POINT.addAreaServed(builder, AREA_SERVEDOffset);
  CONTACT_POINT.addAvailableLanguage(builder, AVAILABLE_LANGUAGEOffset);
  return CONTACT_POINT.endCONTACT_POINT(builder);
}

unpack(): CONTACT_POINTT {
  return new CONTACT_POINTT(
    this.GUID(),
    this.CONTACT_TYPE(),
    this.EMAIL(),
    this.TELEPHONE(),
    this.CONTACT_OPTION(),
    this.AREA_SERVED(),
    this.AVAILABLE_LANGUAGE()
  );
}


unpackTo(_o: CONTACT_POINTT): void {
  _o.GUID = this.GUID();
  _o.CONTACT_TYPE = this.CONTACT_TYPE();
  _o.EMAIL = this.EMAIL();
  _o.TELEPHONE = this.TELEPHONE();
  _o.CONTACT_OPTION = this.CONTACT_OPTION();
  _o.AREA_SERVED = this.AREA_SERVED();
  _o.AVAILABLE_LANGUAGE = this.AVAILABLE_LANGUAGE();
}
}

export class CONTACT_POINTT implements flatbuffers.IGeneratedObject {
constructor(
  public GUID: string|Uint8Array|null = null,
  public CONTACT_TYPE: string|Uint8Array|null = null,
  public EMAIL: string|Uint8Array|null = null,
  public TELEPHONE: string|Uint8Array|null = null,
  public CONTACT_OPTION: string|Uint8Array|null = null,
  public AREA_SERVED: string|Uint8Array|null = null,
  public AVAILABLE_LANGUAGE: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GUID = (this.GUID !== null ? builder.createString(this.GUID!) : 0);
  const CONTACT_TYPE = (this.CONTACT_TYPE !== null ? builder.createString(this.CONTACT_TYPE!) : 0);
  const EMAIL = (this.EMAIL !== null ? builder.createString(this.EMAIL!) : 0);
  const TELEPHONE = (this.TELEPHONE !== null ? builder.createString(this.TELEPHONE!) : 0);
  const CONTACT_OPTION = (this.CONTACT_OPTION !== null ? builder.createString(this.CONTACT_OPTION!) : 0);
  const AREA_SERVED = (this.AREA_SERVED !== null ? builder.createString(this.AREA_SERVED!) : 0);
  const AVAILABLE_LANGUAGE = (this.AVAILABLE_LANGUAGE !== null ? builder.createString(this.AVAILABLE_LANGUAGE!) : 0);

  return CONTACT_POINT.createCONTACT_POINT(builder,
    GUID,
    CONTACT_TYPE,
    EMAIL,
    TELEPHONE,
    CONTACT_OPTION,
    AREA_SERVED,
    AVAILABLE_LANGUAGE
  );
}
}
