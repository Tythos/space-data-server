// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { CONTACT_POINT, CONTACT_POINTT } from './CONTACT_POINT.js';
import { POSTAL_ADDRESS, POSTAL_ADDRESST } from './POSTAL_ADDRESS.js';


export class PERSON implements flatbuffers.IUnpackableObject<PERSONT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PERSON {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPERSON(bb:flatbuffers.ByteBuffer, obj?:PERSON):PERSON {
  return (obj || new PERSON()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPERSON(bb:flatbuffers.ByteBuffer, obj?:PERSON):PERSON {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PERSON()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

GUID():string|null
GUID(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
GUID(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

NAME():string|null
NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
NAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ALTERNATE_NAME():string|null
ALTERNATE_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ALTERNATE_NAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

DESCRIPTION():string|null
DESCRIPTION(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
DESCRIPTION(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

IMAGE():string|null
IMAGE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
IMAGE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

SAME_AS():string|null
SAME_AS(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
SAME_AS(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

URL():string|null
URL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
URL(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TELEPHONE():string|null
TELEPHONE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
TELEPHONE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

EMAIL():string|null
EMAIL(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
EMAIL(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

CONTACT_POINT(obj?:CONTACT_POINT):CONTACT_POINT|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new CONTACT_POINT()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

ADDRESS(obj?:POSTAL_ADDRESS):POSTAL_ADDRESS|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new POSTAL_ADDRESS()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

JOB_TITLE():string|null
JOB_TITLE(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
JOB_TITLE(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startPERSON(builder:flatbuffers.Builder) {
  builder.startObject(12);
}

static addGuid(builder:flatbuffers.Builder, GUIDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, GUIDOffset, 0);
}

static addName(builder:flatbuffers.Builder, NAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, NAMEOffset, 0);
}

static addAlternateName(builder:flatbuffers.Builder, ALTERNATE_NAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ALTERNATE_NAMEOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, DESCRIPTIONOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, DESCRIPTIONOffset, 0);
}

static addImage(builder:flatbuffers.Builder, IMAGEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, IMAGEOffset, 0);
}

static addSameAs(builder:flatbuffers.Builder, SAME_ASOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, SAME_ASOffset, 0);
}

static addUrl(builder:flatbuffers.Builder, URLOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, URLOffset, 0);
}

static addTelephone(builder:flatbuffers.Builder, TELEPHONEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, TELEPHONEOffset, 0);
}

static addEmail(builder:flatbuffers.Builder, EMAILOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, EMAILOffset, 0);
}

static addContactPoint(builder:flatbuffers.Builder, CONTACT_POINTOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, CONTACT_POINTOffset, 0);
}

static addAddress(builder:flatbuffers.Builder, ADDRESSOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, ADDRESSOffset, 0);
}

static addJobTitle(builder:flatbuffers.Builder, JOB_TITLEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, JOB_TITLEOffset, 0);
}

static endPERSON(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): PERSONT {
  return new PERSONT(
    this.GUID(),
    this.NAME(),
    this.ALTERNATE_NAME(),
    this.DESCRIPTION(),
    this.IMAGE(),
    this.SAME_AS(),
    this.URL(),
    this.TELEPHONE(),
    this.EMAIL(),
    (this.CONTACT_POINT() !== null ? this.CONTACT_POINT()!.unpack() : null),
    (this.ADDRESS() !== null ? this.ADDRESS()!.unpack() : null),
    this.JOB_TITLE()
  );
}


unpackTo(_o: PERSONT): void {
  _o.GUID = this.GUID();
  _o.NAME = this.NAME();
  _o.ALTERNATE_NAME = this.ALTERNATE_NAME();
  _o.DESCRIPTION = this.DESCRIPTION();
  _o.IMAGE = this.IMAGE();
  _o.SAME_AS = this.SAME_AS();
  _o.URL = this.URL();
  _o.TELEPHONE = this.TELEPHONE();
  _o.EMAIL = this.EMAIL();
  _o.CONTACT_POINT = (this.CONTACT_POINT() !== null ? this.CONTACT_POINT()!.unpack() : null);
  _o.ADDRESS = (this.ADDRESS() !== null ? this.ADDRESS()!.unpack() : null);
  _o.JOB_TITLE = this.JOB_TITLE();
}
}

export class PERSONT implements flatbuffers.IGeneratedObject {
constructor(
  public GUID: string|Uint8Array|null = null,
  public NAME: string|Uint8Array|null = null,
  public ALTERNATE_NAME: string|Uint8Array|null = null,
  public DESCRIPTION: string|Uint8Array|null = null,
  public IMAGE: string|Uint8Array|null = null,
  public SAME_AS: string|Uint8Array|null = null,
  public URL: string|Uint8Array|null = null,
  public TELEPHONE: string|Uint8Array|null = null,
  public EMAIL: string|Uint8Array|null = null,
  public CONTACT_POINT: CONTACT_POINTT|null = null,
  public ADDRESS: POSTAL_ADDRESST|null = null,
  public JOB_TITLE: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const GUID = (this.GUID !== null ? builder.createString(this.GUID!) : 0);
  const NAME = (this.NAME !== null ? builder.createString(this.NAME!) : 0);
  const ALTERNATE_NAME = (this.ALTERNATE_NAME !== null ? builder.createString(this.ALTERNATE_NAME!) : 0);
  const DESCRIPTION = (this.DESCRIPTION !== null ? builder.createString(this.DESCRIPTION!) : 0);
  const IMAGE = (this.IMAGE !== null ? builder.createString(this.IMAGE!) : 0);
  const SAME_AS = (this.SAME_AS !== null ? builder.createString(this.SAME_AS!) : 0);
  const URL = (this.URL !== null ? builder.createString(this.URL!) : 0);
  const TELEPHONE = (this.TELEPHONE !== null ? builder.createString(this.TELEPHONE!) : 0);
  const EMAIL = (this.EMAIL !== null ? builder.createString(this.EMAIL!) : 0);
  const CONTACT_POINT = (this.CONTACT_POINT !== null ? this.CONTACT_POINT!.pack(builder) : 0);
  const ADDRESS = (this.ADDRESS !== null ? this.ADDRESS!.pack(builder) : 0);
  const JOB_TITLE = (this.JOB_TITLE !== null ? builder.createString(this.JOB_TITLE!) : 0);

  PERSON.startPERSON(builder);
  PERSON.addGuid(builder, GUID);
  PERSON.addName(builder, NAME);
  PERSON.addAlternateName(builder, ALTERNATE_NAME);
  PERSON.addDescription(builder, DESCRIPTION);
  PERSON.addImage(builder, IMAGE);
  PERSON.addSameAs(builder, SAME_AS);
  PERSON.addUrl(builder, URL);
  PERSON.addTelephone(builder, TELEPHONE);
  PERSON.addEmail(builder, EMAIL);
  PERSON.addContactPoint(builder, CONTACT_POINT);
  PERSON.addAddress(builder, ADDRESS);
  PERSON.addJobTitle(builder, JOB_TITLE);

  return PERSON.endPERSON(builder);
}
}
